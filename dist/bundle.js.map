{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://gestortareas/./src/task.js","webpack://gestortareas/./src/ui.js","webpack://gestortareas/webpack/bootstrap","webpack://gestortareas/webpack/runtime/define property getters","webpack://gestortareas/webpack/runtime/hasOwnProperty shorthand","webpack://gestortareas/webpack/runtime/make namespace object","webpack://gestortareas/./src/index.js"],"sourcesContent":["// Obtener la lista de Tareas del almacenamiento del navegador \"Local Storage\"\nlet tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n\n//Funcion para poder llevar las tareas de la lista\nexport const getTasks = () => tasks;\n// Funcion para agregar una nueva lista de tareas\nexport const addTask = (task) => {\n    const newTask = {\n        id: Date.now(),\n        text: task,\n        completed: false,\n    };\n    tasks.push(newTask);\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n};\n\n// funcion para eliminar una tarea de la lista \nexport const deleteTask = (id) => {\n    tasks = tasks.filter((task) => task.id !== parseInt(id))\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks))\n};\n\n// funcion para actualizar una tarea de la lista \nexport const toggleTask = (id) => {\n    tasks = tasks.map((task) => {\n        if(task.id === parseInt(id)){\n            task.completed = !task.completed;\n        }\n        return task;\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n};\n\n\n","import { getTasks } from \"./task\";\n\n// funcion para mostrar al usuario las tareas\nexport const renderTasks = () =>{\n    const taskList = document.getElementById(\"task-list\");\n    taskList.innerHTML = '';\n    const tasks = getTasks();\n    console.log(\"tasks, \", tasks)\n\n    tasks.forEach((task) => {\n        const li = document.createElement(\"li\");\n        li.setAttribute(\"data-id\", task.id);\n\n        // a√±adir clase si la tarea esta completada \n        if(task.completed === true) {\n            li.classList.add(\"completed\")\n        }\n\n        li.innerHTML = `\n            ${task.text}\n            <button class = \"delete\"> Eliminar </button>\n            <button class =\"toggle\">${ task.completed === false ? \"Completar\" : \"Deshacer\"}</button>\n        `;\n\n        taskList.appendChild(li);\n    });\n};\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { renderTasks} from \"./ui\"\nimport { addTask, deleteTask, toggleTask} from \"./task\"\n\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    renderTasks();\n\n    document.getElementById(\"task-form\").addEventListener(\"submit\", (e) => {\n        e.preventDefault();\n\n        const taskInput = document.getElementById(\"task-input\").value;\n\n        if(taskInput !== \"\"){\n            addTask(taskInput);\n            renderTasks();\n            // limpiar el valor del input\n            document.getElementById(\"task-input\").value = \"\"\n        };\n    });\n}); \n\ndocument.getElementById(\"task-list\").addEventListener(\"click\", (e) =>{\n    if(e.target.classList.contains(\"delete\")){\n        const taskId= e.target.parentElement.getAttribute(\"data-id\");\n        deleteTask(taskId);\n        renderTasks();\n    }\n\n    if(e.target.classList.contains(\"toggle\")){\n        const taskId= e.target.parentElement.getAttribute(\"data-id\");\n        toggleTask(taskId);\n        renderTasks();\n    }\n})"],"names":["tasks","JSON","parse","localStorage","getItem","getTasks","addTask","task","newTask","id","Date","now","text","completed","push","setItem","stringify","deleteTask","filter","parseInt","toggleTask","map","renderTasks","taskList","document","getElementById","innerHTML","console","log","forEach","li","createElement","setAttribute","classList","add","concat","appendChild","addEventListener","e","preventDefault","taskInput","value","target","contains","taskId","parentElement","getAttribute"],"sourceRoot":""}